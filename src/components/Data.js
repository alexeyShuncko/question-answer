export const data = [
  {
    Q: {
      question: `Расскажите, чем, на ваш взгляд, отличается хорошая верстка от плохой с точки зрения:
      пользователя, менеджера проекта, дизайнера, верстальщика, клиентского программиста, серверного программиста.`,
      answer: `Хорошая верстка с точки зрения:
      Пользователя - элементы верстки не должны друг друга перекрывать и мешать просмотру контента или взаимодействию с элементами страницы. Пользователь должен быть уведомлен (лоадер) о загрузке с сервера каких-либо данных, при этом не должно быть пустой страницы. Так же, при возникновении ошибки, пользователь должен знать об этом и иметь возможность перейти на другую страницу или же вернуться обратно, а не якобы зависший сайт. Вёрстка должна корректно отображаться во всех браузерах и на всех устройствах. Так же не стоит забывать людей с ограниченными возможностями, и хорошая верстка должна учитывать их ограничения(Accessibility).
      Менеджера проекта - вёрстка должна соответствовать макетам и документации к проекту.
      Дизайнера - вёрстка максимально точно отражает макет дизайнера. 
      Верстальщика - вёрстка должна корректно отображаться во всех браузерах и на всех устройствах. Использована семантическая вёрстка и Accessibility (доступность использования). Используются общие для компании правила написания кода. Вёрстка должна максимально соответствовать макетам и документации к проекту.
      Клиентского программиста – то же что и для верстальщика, при выполнении клиентским программистом верстки. Если же он получает готовую верстку, то она должна быть легко читаема, иметь чёткую структуру, чтобы не было лишней работы в чистке кода, правке стилей и пр.
      Серверного программиста - верстка не нагружает сервер большим количеством запросов. Вёрстка не позволяет отправлять повторные одинаковые запросы к серверу в момент ожидания ответа на этот запрос.  Применяется при возможности кэширование, CDN, сжатие данных.
      `,
    },
  },
  {
    Q: {
      question: `Опишите основные особенности верстки крупных многостраничных сайтов, дизайн которых может меняться в процессе реализации и поддержки.
      Расскажите о своем опыте верстки подобных сайтов: какие методологии, инструменты
      и технологии вы применяли на практике.
      `,
      answer: `Использовать переменные для стилей CSS, чтобы при необходимости изменить их по всему проекту. Использовать методологию БЭМ. Верстка должна быть выполнена отдельными, независимыми компонентами или блоками, которые можно многократно использовать, особенно если имеются блоки, которые повторяются. Также важна правильная структура папок и файлов в проекте, с понятными именами. В своих проектах постоянно пользуюсь этими приемами.`,
    },
  },
  {
    Q: {
      question: `Опишите основные особенности верстки сайтов, которые должны одинаково хорошо отображаться как на любом современном компьютере, так и на смартфонах и планшетах под управлением iOS и Android. Расскажите о своем опыте верстки
      подобных сайтов: какие инструменты и технологии вы применяли, как проверяли
      результат на различных устройствах, какие именно устройства требовалось
      поддерживать.
      `,
      answer: `Использование отзывчивой или адаптивной верстки. Использование медиазапросов и перестройка макета сайта для экранов различной ширины. Первоначально верстку тестирую в браузере, с помощью инструментов разработчика меняю тип устройства и проверяю корректность работы. Делаю вёрстку сразу для декстопа, потом добавляю отзывчивость для планшета и мобильной версии.`,
    },
  },
  {
    Q: {
      question: `Расскажите, какие инструменты помогают вам экономить время в процессе
      написания, проверки и отладки кода.
      `,
      answer: `Веду разработку в VS Code с использованием его расширений. GitHub использую для удаленного хранения версий и деплоя моих проектов. Панель разработчика в Google Chrome для проверки и отладки кода.`,
    },
  },
  {
    Q: {
      question: `Вам нужно понять, почему страница отображается некорректно в Safari на iOS и в IE на
      Windows. Код писали не вы, доступа к исходникам у вас нет. Ваши действия?
      Сталкивались ли вы с подобными проблемами на практике?
      `,
      answer: `Открою инструменты разработчика, которые позволят оперативно посмотреть на все элементы сайта и их стили. Скорее всего применены стили CSS, которые не внедрены в браузеры на постоянной основе и необходимо применение префиксов к таким стилям.`,
    },
  },

  {
    Q: {
      question: `Дизайнер отдал вам макет, в котором не показано, как должны выглядеть
      интерактивные элементы при наведении мыши. Ваши действия?
      `,
      answer: `Обращусь к документации к проекту. Если же таковой не имеется или там не указано поведение интерактивных элементов, то буду настойчиво уточнять у дизайнера. Если и это не поможет, а проект нужно срочно делать, то обращусь к тим лиду или product owner проекта. Если и такой возможности нет, то применю эффекты наведения похожие на уже использованные в проекте. Если это первый такой элемент, то применю стили на своё усмотрение, исходя из общей стилистики проекта.`,
    },
  },
  {
    Q: {
      question: `Какие ресурсы вы используете для развития в профессиональной сфере? Приведите несколько конкретных примеров (сайты, блоги и так далее).
      Какое направление развития вам более близко: JS-программирование, HTML/CSS-
      верстка или что-то ещё?
      Какие ещё области знаний, кроме тех, что непосредственно относятся к работе, вам
      интересны?
      `,
      answer: `Для развития изучаю статьи на habr.com и developer.mozilla.org, а также learn.javascript.ru. При разработке обращаюсь к сайтам с официальной документацией к используемым мною технологиям (reactjs.org, nextjs.org, reactnative.dev и т.д.). Обучающие видеоролики на youtube.com.
      Мне близко направление развития в сторону фронтенда в целом. А в глобальном плане, интересно программирование.
      `,
    },
  },
  {
    Q: {
      question: `Расскажите нам о себе и предоставьте несколько ссылок на последние работы,
      выполненные вами.
      `,
      answer: `Я парень, который хочет не разочароваться в разработке и программировании, находясь в поиске работы и получая отказы, а зачастую и просто игнорирование и молчание. Не люблю оливки и просто обожаю ёжиков). 
      Все мои работы на моем гитхабе: https://github.com/alexeyShuncko
      Ссылки на последние работы:
      Интернет магазин - https://shop-alexeyshuncko.vercel.app/
      Актуально резюме - https://alexeyshuncko.github.io/resume/
      Веб-приложение доходов/расходов - https://alexeyshuncko.github.io/app-expenses/
      `,
    },
  },
];
